modinit(){
    go mod init $1
    go mod tidy
}

mvcurr(){
    cd -P .
    mv "$PWD" "${PWD%/*}/$1"
    cd ../$1
}

mksibling(){
    cd -P .
    mkdir ${PWD%/*}/$1
    cd ${PWD%/*}/$1
}

pobs(){
    date +"%Y-%m-%d %H:%M:%S updating obsidian data"
    cd $HOME/Documents/obsidian;
    g pull > /dev/null 2>&1
    g pobs > /dev/null 2>&1
    g push > /dev/null 2>&1
    cd - > /dev/null 2>&1
}

rm-dangling(){
    dangling=$(docker images -f dangling=true -q)
    if [ -z "$dangling" ]
    then
        date +"%Y-%m-%d %H:%M:%S rm-dangling: no zombie containers around"
    else
        date +"%Y-%m-%d %H:%M:%S rm-dangling: some zombie containers around"
        docker rmi $(docker images -f dangling=true -q) --force
    fi
}

yoda-unmount(){
    # mount -l -t fuse.sshfs | awk -F " " '{print "fusermount -u " $3}' | bash
    sudo umount -l ~/external/yoda1
    sudo umount -l ~/external/yoda2
}

# foxkill(){
#     foxes=$(pidof firefox)
#     if [ -z "$foxes" ]
#     then
#         date +"%Y-%m-%d %H:%M:%S foxkill: no foxes walking around"
#     else
#         date +"%Y-%m-%d %H:%M:%S foxkill: poor litle foxes"
#         sudo kill $(pidof firefox)
#     fi
# }

# reb(){
#     dockkill
#     date +"%Y-%m-%d %H:%M:%S reb: rebooting"
#     sudo reboot;
# }

# shut(){
#     dockkill
#     date +"%Y-%m-%d %H:%M:%S shut: shutting down"
#     sudo shutdown now -h;
# }

docker-kill(){
    date +"%Y-%m-%d %H:%M:%S stopping $(docker stop $@)"
    date +"%Y-%m-%d %H:%M:%S removing $(docker rm $@)"
}


dockkill(){
    date +"%Y-%m-%d %H:%M:%S dockkill: killing all docker containers"
    d=$(docker ps -a -q|grep -v "firedock")
    if [[ -z "$d"  ]]; then
        date +"%Y-%m-%d %H:%M:%S dockkill: no docker containers running"
    else
        sudo docker stop $(docker ps -a -q|grep -v "firedock") && sudo docker rm $(docker ps -a -q|grep -v "firedock");
    fi
}

firedock(){
    sudo xhost +local:docker
    sudo xhost +

    running_foxes=$(docker ps -a --filter "status=running" |grep firedock|wc -l)
    all_foxes=$(docker ps -a |grep firedock|wc -l)

    if [ $all_foxes = "1" ]; then
            date +"%Y-%m-%d %H:%M:%S firedock: $all_foxes stance(s)"
        if [ $running_foxes = "1" ]; then
            date +"%Y-%m-%d %H:%M:%S firedock: stance is already running"
        else
            date +"%Y-%m-%d %H:%M:%S firedock: restarting stopped firedock"
            docker start firedock
        fi
    else
        date +"%Y-%m-%d %H:%M:%S firedock: starting new firedock"
        # docker run -it -e DISPLAY=$DISPLAY --name firedock -v /tmp/.X11-unix/:/tmp/.X11-unix -v /home/hugo/Downloads:/home/developer/downloads --net=host -d firedock
        # docker run -it -e DISPLAY=$DISPLAY --name firedock -v /tmp/.X11-unix/:/tmp/.X11-unix -v ~/Downloads/firedock/:/home/developer/downloads --net=host -d firedock
        docker run -it -e DISPLAY=$DISPLAY --name firedock -v /tmp/.X11-unix/:/tmp/.X11-unix -v /home/hugo/Downloads/firedock:/home/Downloads --net=host -d firedock
    fi
}

firedock-sync(){
    date +"%Y-%m-%d %H:%M:%S firedock-sync: starting synchronization"
    rm -rf $HOME/Downloads/firedock && mkdir $HOME/Downloads/firedock
    docker cp firedock:/root/Downloads $HOME/Downloads/firedock && date +"%Y-%m-%d %H:%M:%S firedock-sync: sunc from firedock to local"
    mv $HOME/Downloads/firedock/Downloads/* $HOME/Downloads/firedock/.
    date +"%Y-%m-%d %H:%M:%S firedock-sync: properly placed host files"
    
#     docker cp $HOME/Downloads/firedock firedock:/home/developer/tmp-dl && \
#     date +"%Y-%m-%d %H:%M:%S firedock-sync: sunc from local to firedock" && \
#     docker exec -u 0 -it firedock bash /home/developer/tmp-dl.sh && \
#     date +"%Y-%m-%d %H:%M:%S firedock-sync: removed container repeated files"
}

# utilities for the lazy
alias gmt="go mod tidy"
alias firedock-bash="docker exec -it firedock bash"
alias firedock-root="docker exec -it -u 0 firedock bash"
alias firedock-stats="docker stats firedock"
alias rset="source $HOME/.zshrc"
alias suuu="screen -dmS suuu bash -c 'clear && clear && sudo apt-fast update && sudo apt-fast upgrade -y && sudo $HOME/scripts/clean_snap.sh && exit' && screen -r suuu"
alias psef="ps -ef |grep $1"
alias cdscripts="cd $HOME/scripts"
alias cdobsidian="cd $HOME/Documents/obsidian"
alias cprojects="cd $HOME/Projects"
alias cpersonal="cd $HOME/Projects/personal"
alias go-snippets="cd $HOME/Projects/go-snippets"
alias rbind="bind '\"\e[A\":history-search-backward' && bind '\"\e[B\":history-search-forward'"
alias realias="code $HOME/.zsh_aliases"
alias realias_custom="code $HOME/.zsh_specific_aliases"
alias home-server="ssh home@192.168.15.50"
alias ss-vps="ssh root@191.252.193.196"
alias dev-server="ssh dev@192.168.2.50"
alias lsdisk='lsblk -o name,mountpoint,label,size,fstype,uuid | egrep -v "^loop|zram"'
alias kscreen="screen -XS $1 quit"
alias vetest="go vet ./... && go test -v"
alias custom-date='date +"%Y-%m-%d %H:%M:%S"'
alias dcc="docker-compose"
alias ifconf="ifconfig wlp1s0"
alias newtab="terminator --new-tab && exit"
alias c="xclip -selection clipboard"
alias refresh-corners="gnome-extensions disable custom-hot-corners@janrunx.gmail.com && gnome-extensions enable custom-hot-corners@janrunx.gmail.com"
alias lsnw="sudo nmap -sP -n 192.168.2.0/24"
alias rasp="sudo $HOME/scripts/sshtomac.sh pi DC:A6:32:53:B9:2F $HOME"
alias g="git"

# typo avoidance
alias mkae="make"
alias amke="make"
alias maek="make"
alias cd..="cd .."
alias dfh='df -h | grep -v "loop\|SWAP"'

# general utilities
alias now='date +"%Y-%m-%d %H:%M:%S"'
alias today='date +"%Y-%m-%d"'
alias cl="clear && clear"
alias ls="ls --color=auto"
alias grep="grep --color=auto"
alias g="git"
alias brightup="xdotool key XF86MonBrightnessUp"
alias brightdown="xdotool key XF86MonBrightnessDown"
alias apt="apt-fast"
alias apt-search="apt-cache search"
alias dk-ls="docker images --format \"{{.ID}}\t{{.Size}}\t{{.Repository}}\" | sort -k 2 -h"
alias code="codium"

## unused aliases
# alias gocmd="go run /home/hugo/Projects/snippets/go-snippets/gocmd.go"
# alias xml2tap="go run $HOME/Projects/snippets/go-snippets/xml2tap.go"
# alias codei="code-insiders"
# alias anbox-launch="screen -dmS anbox bash -c 'anbox launch --package=org.anbox.appmgr --component=org.anbox.appmgr.AppViewActivity'"
# alias anbox-kill="sudo snap restart anbox"
# alias lite-avd="screen -dmS lite-avd bash -c '/home/hugo/Android/Sdk/emulator/emulator -avd lite'"
# alias lite-avd-kill="screen -X -s lite-avd kill"

if [ -f ~/.zsh_specific_aliases ]; then
    echo $(date +"%Y-%m-%d %H:%M:%S") "loading specific aliases"
    . ~/.zsh_specific_aliases
fi
